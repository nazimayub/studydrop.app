rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // USERS
    // Allow users to:
    // - Create their own user document
    // - Read any user's public profile data (for leaderboards, profiles)
    // - Only update their own document
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read: if isSignedIn();
      allow update: if isOwner(userId);

      // Allow users to read their own votes
      match /votes/{voteId} {
        allow read: if isOwner(userId);
        allow create, update, delete: if isOwner(userId);
      }

       // Allow users to manage their own notifications
      match /notifications/{notificationId} {
        allow read, create, update, delete: if isOwner(userId);
      }
    }

    // NOTES
    match /notes/{noteId} {
      allow read: if resource.data.isPublic == true || (isSignedIn() && isOwner(resource.data.authorId));
      allow create, update, delete: if isSignedIn() && isOwner(resource.data.authorId);
      
       match /comments/{commentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
      }
    }
    
    // QUESTIONS
    match /questions/{questionId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);

        match /answers/{answerId} {
            allow read: if isSignedIn();
            allow create: if isSignedIn();
            allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
            
            match /comments/{commentId} {
                allow read: if isSignedIn();
                allow create: if isSignedIn();
                allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
            }
        }

        match /comments/{commentId} {
          allow read: if isSignedIn();
          allow create: if isSignedIn();
          allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
        }
    }
  }
}
