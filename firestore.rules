
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to get the user's document
    function getUser(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Users can only read their own data, but can create a user document for anyone (for signup)
    // Points should not be editable by the client.
    match /users/{userId} {
      allow read;
      allow create: if isSignedIn();
      allow update: if request.auth.uid == userId && !("points" in request.resource.data);
    }
    
    // Notes can be read by anyone if public, or by the author if not.
    // Anyone can create a note.
    // Users can only update/delete their own notes.
    match /notes/{noteId} {
      allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.authorId;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
    }

    // Questions can be read by anyone.
    // Signed-in users can create questions.
    // Users can only update/delete their own questions.
    match /questions/{questionId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId;

        // Answers can be read by anyone.
        // Signed-in users can create answers.
        // Users can update their own answers.
        // The author of the question can update an answer to accept it.
        match /answers/{answerId} {
            allow read, create: if isSignedIn();
            allow update: if isSignedIn() && (
                            request.auth.uid == resource.data.authorId || 
                            request.auth.uid == get(/databases/$(database)/documents/questions/$(questionId)).data.authorId
                          );
            allow delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
        }
    }
  }
}

    